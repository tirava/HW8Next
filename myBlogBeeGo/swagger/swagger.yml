swagger: "2.0"
info:
  title: myBlog swagger API
  description: My Blog has a cool swagger for API
  version: 1.0.0
  contact:
    email: kirk@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /api/v1
paths:
  /posts/:
    post:
      tags:
      - posts
      description: create new post
      operationId: APIController.CreatePost
      parameters:
      - in: body
        name: body
        description: json post body, use html body in double quotes instead {}
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      responses:
        "201":
          description: body is empty
        "401":
          description: not authorized
        "500":
          description: server error
  /posts/{id}:
    get:
      tags:
      - posts
      description: get one post
      operationId: APIController.GetOnePost
      parameters:
      - in: path
        name: id
        description: ID of the post
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Post'
        "404":
          description: not found
        "500":
          description: server error
    put:
      tags:
      - posts
      description: update post
      operationId: APIController.UpdatePost
      parameters:
      - in: path
        name: id
        description: ID of the post
        required: true
        type: string
      - in: body
        name: body
        description: json post body, use html body in double quotes instead {}
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      responses:
        "200":
          description: body is empty
        "401":
          description: not authorized
        "500":
          description: server error
    delete:
      tags:
      - posts
      description: delete post
      operationId: APIController.DeletePost
      parameters:
      - in: path
        name: id
        description: ID of the post
        required: true
        type: string
      responses:
        "200":
          description: body is empty
        "401":
          description: not authorized
        "500":
          description: server error
  /users/:
    post:
      tags:
      - users
      description: create new user
      operationId: UsersController.CreateUser
      parameters:
      - in: body
        name: body
        description: json user body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "201":
          description: body is empty
        "500":
          description: server error
  /users/{id}:
    post:
      tags:
      - users
      description: auth user
      operationId: UsersController.AuthUser
      parameters:
      - in: path
        name: id
        description: name of user
        required: true
        type: string
      - in: body
        name: body
        description: json user body
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: not found
        "500":
          description: server error
definitions:
  models.Post:
    title: Post
    type: object
    properties:
      body:
        $ref: '#/definitions/template.HTML'
      id:
        description: custom post id for create
        type: string
      summary:
        type: string
      title:
        type: string
  models.User:
    title: User
    type: object
    properties:
      uname:
        type: string
      upass:
        type: string
  primitive.ObjectID:
    title: ObjectID
    type: object
  template.HTML:
    title: HTML
    type: object
tags:
- name: posts
  description: |
    APIController for operations with posts via API.
- name: users
  description: |
    UsersController for operations with users via API.
